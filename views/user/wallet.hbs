<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/notyf/notyf.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf/notyf.min.css">
  <title>Wallet Design</title>
  <style>
    .wallet-card {
      background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
      transition: all 0.3s ease;
    }
    .wallet-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    }
    .transaction-row {
      transition: all 0.2s ease;
    }
    .transaction-row:hover {
      background-color: #f8fafc;
    }
    .btn-primary {
      transition: all 0.3s ease;
    }
    .modal-content {
      animation: slideIn 0.3s ease-out;
    }
    @keyframes slideIn {
      from { transform: translateY(-20px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
  </style>
</head>
<body class="bg-gray-50" onload="showSuccessMessage()">
    {{>header}}
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    {{>profilebar}}

    <!-- Main Content -->
    <main class="flex-1 p-8 max-w-7xl mx-auto">
      <h1 class="text-2xl font-semibold text-gray-800 mb-8">My Wallet</h1>

      <!-- Enhanced Wallet Card -->
      <div class="wallet-card p-8 rounded-2xl shadow-lg">
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-6">
            <div class="text-white">
              <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <rect x="3" y="5" width="18" height="14" rx="2" stroke-width="2"/>
                <path stroke-linecap="round" stroke-linejoin="round" d="M3 10h18M7 15h3" stroke-width="2"/>
              </svg>
            </div>
            <div>
              <p class="text-white text-3xl font-semibold mb-1">₹ {{wallet.balance}}</p>
              <p class="text-blue-100 text-md">Available Balance</p>
            </div>
          </div>
          <button onclick="openAddMoneyModal()" class="bg-white text-blue-600 px-8 py-3 rounded-xl shadow-lg font-semibold hover:bg-blue-50 transform transition-all duration-300 ease-in-out">+ Add Money</button>
        </div>
      </div>

      <!-- Enhanced Transaction History -->
      <section class="mt-10">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-semibold text-gray-800">Transaction History</h2>
        </div>

        <div class="bg-white rounded-xl shadow-md overflow-hidden border border-gray-100">
          {{#if wallet.transactions}}
            <table class="w-full border-collapse">
              <thead>
                <tr class="bg-gray-50 text-gray-600 text-left">
                  <th class="py-4 px-6 font-semibold text-sm uppercase tracking-wider border-b-2 border-gray-200">#</th>
                  <th class="py-4 px-6 font-semibold text-sm uppercase tracking-wider border-b-2 border-gray-200">Amount</th>
                  <th class="py-4 px-6 font-semibold text-sm uppercase tracking-wider border-b-2 border-gray-200">Type</th>
                  <th class="py-4 px-6 font-semibold text-sm uppercase tracking-wider border-b-2 border-gray-200">Description</th>
                  <th class="py-4 px-6 font-semibold text-sm uppercase tracking-wider border-b-2 border-gray-200">Date</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-100">
                {{#each wallet.transactions}}
                <tr class="transaction-row hover:bg-blue-50/30 transition-colors duration-150">
                  <td class="py-3 px-4 text-gray-500 text-sm">{{add @index 1}}</td>
                  <td class="py-3 px-4">
                    <span class="font-medium text-base {{#if (eq this.type 'credit')}}text-green-600{{else}}text-red-600{{/if}}">
                      ₹ {{this.amount}}
                    </span>
                  </td>
                  <td class="py-3 px-4">
                    <span class="px-4 py-1 rounded-full text-sm font-medium inline-flex items-center gap-2 {{#if (eq this.type 'credit')}}bg-green-100 text-green-800{{else}}bg-red-100 text-red-800{{/if}}">
                      {{#if (eq this.type 'credit')}}
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
                        </svg>
                      {{else}}
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
                        </svg>
                      {{/if}}
                      {{capitalize this.type}}
                    </span>
                  </td>
                  <td class="py-3 px-4 text-gray-700 text-sm font-medium">{{this.description}}</td>
                  <td class="py-3 px-4 text-gray-500 text-sm">{{formatDate this.date}}</td>
                </tr>
                {{/each}}
              </tbody>
            </table>
          {{else}}
            <div class="py-20 text-center bg-gray-50/50">
              <div class="flex justify-center mb-6">
                <div class="p-6 bg-blue-100 rounded-full">
                  <svg class="w-20 h-20 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 10h18M7 15h3M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z"/>
                  </svg>
                </div>
              </div>
              <h3 class="text-2xl font-semibold text-gray-800 mb-3">No Transactions Yet</h3>
              <p class="text-gray-500 mb-8 max-w-md mx-auto">Your transaction history will appear here once you start using your wallet.</p>
              <button onclick="openAddMoneyModal()" class="bg-blue-600 text-white px-8 py-3 rounded-xl shadow-lg font-semibold hover:bg-blue-700 transform hover:-translate-y-0.5 transition-all duration-300 ease-in-out inline-flex items-center gap-2">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Add Your First Amount
              </button>
            </div>
          {{/if}}
        </div>
      </section>
      </section>
    </main>
  </div>

  <!-- Enhanced Modal -->
  <div id="addMoneyModal" class="fixed inset-0 bg-black bg-opacity-50 hidden backdrop-blur-sm">
    <div class="relative top-20 mx-auto p-8 border w-[28rem] shadow-xl rounded-2xl bg-white modal-content">
      <div class="text-center">
        <div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-blue-100 mb-6">
          <svg class="h-8 w-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
          </svg>
        </div>
        <h3 class="text-2xl font-bold text-gray-900 mb-6">Add Money to Wallet</h3>
        <div class="mb-6">
          <input type="number" id="walletAmount" class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-300" placeholder="Enter amount">
        </div>
        <div class="flex justify-end space-x-4">
          <button onclick="closeAddMoneyModal()" class="px-6 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-all duration-300">Cancel</button>
          <button onclick="addMoneyToWallet()" class="px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all duration-300">Add Money</button>
        </div>
      </div>
    </div>
  </div>

  <script>
  const notyf = new Notyf({
    duration: 3000, // Duration of the notification
    position: {
      x: 'right', // Notify position (right or left)
      y: 'top', // Notify position (top or bottom)
    },
    types: [
      {
        type: 'success',
        background: 'green',
        duration: 3000,
      },
      {
        type: 'error',
        background: 'red',
        duration: 3000,
      },
      {
        type: 'info',
        background: 'blue',
        duration:3000,
      },
    ],
  });

  function showSuccessMessage() {
    const urlParams = new URLSearchParams(window.location.search);
    if(urlParams.get('success') === 'true') {
      notyf.success("Money added successfully!");
      // Clean the URL without reloading
      window.history.replaceState({}, document.title, window.location.pathname);
    }
  }

  function openAddMoneyModal() {
    document.getElementById('addMoneyModal').classList.remove('hidden');
  }

  function closeAddMoneyModal() {
    document.getElementById('addMoneyModal').classList.add('hidden');
  }

  async function addMoneyToWallet() {
      const amountInput = document.getElementById('walletAmount');
      const amount = amountInput.value;
      
      if (!amount || isNaN(amount) || amount <= 0) {
          notyf.error("Please enter a valid amount");
          return;
      }

      try {
          const response = await fetch('/user/addWalletMoney', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ amount })
          });

          const data = await response.json();
          
          if (data.status) {
              closeAddMoneyModal();
              // Initialize Razorpay
              var options = {
                  key: data.key_id,
                  amount: data.amount,
                  currency: "INR",
                  name: "Wallet Recharge",
                  description: "Add money to wallet",
                  order_id: data.razorpayOrderId,
                  handler: async function (response) {
                      // Verify payment
                      const verifyResponse = await fetch('/user/verifyWalletPayment', {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json'
                          },
                          body: JSON.stringify({
                              razorpay_payment_id: response.razorpay_payment_id,
                              razorpay_order_id: response.razorpay_order_id,
                              razorpay_signature: response.razorpay_signature,
                              amount: amount
                          })
                      });

                      const verifyData = await verifyResponse.json();
                      if (verifyData.status) {
                          window.location.href = window.location.pathname + '?success=true';
                      }
                  }
              };
              var rzp1 = new Razorpay(options);
              rzp1.open();
          }
      } catch (error) {
          console.error(error);
          notyf.error("Error adding money to wallet");
      }
  }
  </script>
</body>
</html>
