<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/notyf/notyf.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf/notyf.min.css">
  <title>Wallet Design</title>
</head>
<body class="bg-gray-50" onload="showSuccessMessage()">
    {{>header}}
  <div class="flex min-h-screen">
    <!-- Sidebar -->
    {{>profilebar}}

    <!-- Main Content -->
    <main class="flex-1 p-8">
      <h1 class="text-2xl font-semibold text-gray-800 mb-6">Wallet</h1>
      <!-- Wallet Card -->
      <div class="bg-blue-50 p-6 rounded-lg shadow-md flex items-center justify-between">
        <div>
          <div class="flex items-center gap-4">
            <!-- SVG Credit Card Icon -->
            <div class="text-black-600">
              <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <rect x="3" y="5" width="20" height="16" rx="2" ry="2" class="fill-blue-50"></rect>
                <line x1="3" y1="10" x2="22" y2="10" class="stroke-black-600"></line>
                <line x1="7" y1="15" x2="10" y2="15" class="stroke-black-600"></line>
              </svg>
            </div>
            <div>
              <p class="text-gray-700 text-xl font-bold">₹ {{wallet.balance}} </p>
              <p class="text-blue-600 text-sm font-semibold">My Wallet Balance</p>
            </div>
          </div>
        </div>
        <button onclick="openAddMoneyModal()" class="bg-blue-600 text-white px-6 py-2 rounded-lg shadow-lg font-semibold hover:bg-blue-700">Add Money</button>
      </div>

      <!-- History -->
      <section class="mt-8">
        <h2 class="text-lg font-semibold text-gray-700 mb-4">History</h2>
        <div class="overflow-x-auto">
          {{#if wallet.transactions}}
            <table class="w-full bg-white rounded-lg shadow-md">
              <thead>
                <tr class="text-gray-600 text-left border-b">
                  <th class="py-3 px-4">#</th>
                  <th class="py-3 px-4">Amount</th>
                  <th class="py-3 px-4">Type</th>
                  <th class="py-3 px-4">Description</th>
                  <th class="py-3 px-4">Date</th>
                </tr>
              </thead>
              <tbody class="text-gray-700">
                {{#each wallet.transactions}}
                <tr class="border-b">
                  <td class="py-3 px-4 text-md font-semibold">{{add @index 1}}</td>
                  <td class="py-3 px-4 text-md text-red-600 font-semibold">₹ {{this.amount}}</td>
                  <td class="py-3 px-4 {{#if (eq this.type 'credit')}}text-green-600{{else}}text-red-600{{/if}} font-semibold">{{capitalize this.type}}</td>
                  <td class="py-3 px-4 text-md font-semibold">{{this.description}}</td>
                  <td class="py-3 px-4 text-md text-blue-600 font-semibold">{{formatDate this.date}}</td>
                </tr>
                {{/each}}
              </tbody>
            </table>
          {{else}}
            <div class="bg-white rounded-lg shadow-md p-8 text-center">
              <div class="flex justify-center mb-4">
                <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                </div>
                <h3 class="text-xl font-semibold text-gray-700 mb-2">No Transactions Yet</h3>
                <p class="text-gray-500 mb-4">Your transaction history will appear here once you start using your wallet.</p>
                <button onclick="openAddMoneyModal()" class="bg-blue-600 text-white px-6 py-2 rounded-lg shadow-lg font-semibold hover:bg-blue-700 transition duration-200">
                  Add Your First Amount
                </button>
              </div>
          {{/if}}
        </div>
      </section>
    </main>
  </div>

  <!-- Add Money Modal -->
  <div id="addMoneyModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-blue-100">
          <svg class="h-6 w-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
        </div>
        <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Add Money to Wallet</h3>
        <div class="mt-4">
          <input type="number" id="walletAmount" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-600" placeholder="Enter amount">
        </div>
        <div class="mt-4 flex justify-center space-x-4">
          <button onclick="closeAddMoneyModal()" class="px-4 py-2 bg-gray-300 text-gray-700 rounded-md hover:bg-gray-400">Cancel</button>
          <button onclick="addMoneyToWallet()" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">Add Money</button>
        </div>
      </div>
    </div>
  </div>

  <script>
  const notyf = new Notyf({
    duration: 3000, // Duration of the notification
    position: {
      x: 'right', // Notify position (right or left)
      y: 'top', // Notify position (top or bottom)
    },
    types: [
      {
        type: 'success',
        background: 'green',
        duration: 3000,
      },
      {
        type: 'error',
        background: 'red',
        duration: 3000,
      },
      {
        type: 'info',
        background: 'blue',
        duration:3000,
      },
    ],
  });

  function showSuccessMessage() {
    const urlParams = new URLSearchParams(window.location.search);
    if(urlParams.get('success') === 'true') {
      notyf.success("Money added successfully!");
      // Clean the URL without reloading
      window.history.replaceState({}, document.title, window.location.pathname);
    }
  }

  function openAddMoneyModal() {
    document.getElementById('addMoneyModal').classList.remove('hidden');
  }

  function closeAddMoneyModal() {
    document.getElementById('addMoneyModal').classList.add('hidden');
  }

  async function addMoneyToWallet() {
      const amountInput = document.getElementById('walletAmount');
      const amount = amountInput.value;
      
      if (!amount || isNaN(amount) || amount <= 0) {
          notyf.error("Please enter a valid amount");
          return;
      }

      try {
          const response = await fetch('/user/addWalletMoney', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json'
              },
              body: JSON.stringify({ amount })
          });

          const data = await response.json();
          
          if (data.status) {
              closeAddMoneyModal();
              // Initialize Razorpay
              var options = {
                  key: data.key_id,
                  amount: data.amount,
                  currency: "INR",
                  name: "Wallet Recharge",
                  description: "Add money to wallet",
                  order_id: data.razorpayOrderId,
                  handler: async function (response) {
                      // Verify payment
                      const verifyResponse = await fetch('/user/verifyWalletPayment', {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json'
                          },
                          body: JSON.stringify({
                              razorpay_payment_id: response.razorpay_payment_id,
                              razorpay_order_id: response.razorpay_order_id,
                              razorpay_signature: response.razorpay_signature,
                              amount: amount
                          })
                      });

                      const verifyData = await verifyResponse.json();
                      if (verifyData.status) {
                          window.location.href = window.location.pathname + '?success=true';
                      }
                  }
              };
              var rzp1 = new Razorpay(options);
              rzp1.open();
          }
      } catch (error) {
          console.error(error);
          notyf.error("Error adding money to wallet");
      }
  }
  </script>
</body>
</html>
