<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Profile Page</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
</head>
<body>
  {{>header}}
  <div class="flex flex-col md:flex-row h-screen">
    
    <!-- Updated Sidebar -->
    {{>profilebar}}

    <!-- Profile Content -->
    <div class="flex-1 p-8">
      <h1 class="text-2xl font-semibold mb-6">My Profile</h1>
      <div class="flex items-center space-x-4 mb-8">
        <div class="relative">
          <img id="profile-image" src={{user.profileImage}} alt="Profile" class="rounded-full w-20 h-20">
          <label for="profileImage" class="absolute bottom-0 right-0 bg-blue-600 text-white rounded-full p-1 cursor-pointer hover:bg-blue-700">
            <input type="file" class="hidden" name="profileImage" id="profile-image-upload" accept="image/*">
            <span class="text-sm">&#9998;</span>
          </label>
        </div>
        <div>
          <h2 class="text-lg font-semibold">{{user.name}}</h2>
          <p class="text-sm text-gray-500">{{user.email}}</p>
        </div>
      </div>

      <!-- Form -->
      <form class="grid grid-cols-1 md:grid-cols-2 gap-6"  id="profile-form" action="/user/updateProfile" method="POST" enctype="multipart/form-data">
        <div>
          <label class="block text-sm font-medium text-gray-700">Name</label>
          <input type="text" placeholder="Name" name="name" value="{{user.name}}" class="mt-1 w-full border rounded p-2 focus:outline-blue-600">
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700" for="gender">Gender</label>
          <select class="mt-1 w-full border rounded p-2 focus:outline-blue-600" name="gender">
            <option value="">Select a gender</option>
            <option value="male" {{#if (eq user.gender "male")}}selected{{/if}}>Male</option>
            <option value="female" {{#if (eq user.gender "female")}}selected{{/if}}>Female</option>
           <option value="other" {{#if (eq user.gender "other")}}selected{{/if}}>Other</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700" for="email">Email</label>
          <input type="email" name="email" placeholder="Email" value="{{user.email}}" class="mt-1 w-full border rounded p-2 focus:outline-blue-600" readonly>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700">City</label>
          <input type="text" placeholder="City" class="mt-1 w-full border rounded p-2 focus:outline-blue-600">
        </div>
        <div style="display: none;">
          <label class="block text-sm font-medium text-gray-700" for="profileImage">Profile Image</label>
          <input type="file" class="block w-full text-sm text-gray-500" name="profileImage" id="profileImage" accept="image/*" >
        </div>
        <div class="col-span-1 md:col-span-2">
          <button class="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700">Save Changes</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Cropper Modal -->
  <div id="cropper-modal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden">
    <div class="bg-white p-6 rounded-lg">
      <div class="w-96 h-96">
        <img id="cropper-image" src="" class="max-w-full max-h-full">
      </div>
      <div class="flex justify-end mt-4 space-x-2">
        <button id="crop-btn" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">Crop</button>
        <button id="cancel-btn" class="bg-gray-300 px-4 py-2 rounded hover:bg-gray-400">Cancel</button>
      </div>
    </div>
  </div>

  <script>
    const profileImageUpload = document.getElementById('profile-image-upload');
  const profileImage = document.getElementById('profile-image');
  const cropperModal = document.getElementById('cropper-modal');
  const cropperImage = document.getElementById('cropper-image');
  const cropBtn = document.getElementById('crop-btn');
  const cancelBtn = document.getElementById('cancel-btn');
  let cropper;

  profileImageUpload.addEventListener('change', function () {
  const file = this.files[0];
  if (file) {
    console.log("File selected:", file); // Debug log
    const reader = new FileReader();
    reader.onload = function (e) {
      console.log("File read successfully"); // Debug log
      cropperImage.src = e.target.result;
      cropperModal.classList.remove('hidden');
      
      // Additional error handling
      try {
        if (cropper) cropper.destroy(); // Ensure no duplication
        cropper = new Cropper(cropperImage, {
          aspectRatio: 1,
          viewMode: 1,
        });
        console.log("Cropper initialized successfully"); // Debug log
      } catch (error) {
        console.error("Error initializing Cropper:", error);
      }
    };
    reader.onerror = function(error) {
      console.error("Error reading file:", error);
    };
    reader.readAsDataURL(file);
  } else {
    console.error("No file selected.");
  }
});
  cropBtn.addEventListener('click', function () {
    if (cropper) {
      const canvas = cropper.getCroppedCanvas({
        width: 80,
        height: 80,
      });
      profileImage.src = canvas.toDataURL();
      cropper.destroy();
      cropperModal.classList.add('hidden');
    }
  });

  cancelBtn.addEventListener('click', function () {
    if (cropper) cropper.destroy();
    cropperModal.classList.add('hidden');
  });
   
  </script>
</body>
</html>

