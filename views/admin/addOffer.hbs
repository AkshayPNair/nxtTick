<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard - Add Offer</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="bg-gray-100 font-sans text-gray-800 flex flex-col min-h-screen">
  <div class="flex">
    <!-- Sidebar -->
    {{> sideBar}}

    <!-- Main Content -->
    <main class="flex-1 bg-white p-5">
      <!-- Header -->
      <div class="flex items-center justify-between mb-5">
        <h1 class="font-bold text-xl">Add Offer</h1>
        <button class="bg-blue-600 text-white py-2 px-4 rounded-lg">Admin</button>
      </div>

      <!-- Breadcrumbs -->
      <div class="text-sm text-gray-500 mb-5">
        <span>Dashboard</span> > <span>All Offers</span> > <span class="text-blue-600">Add Offer</span>
      </div>

      <!-- Form Section -->
      <form id="offer-form">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 bg-gray-50 p-5 rounded shadow">
          <!-- Form Inputs -->
          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium">Offer Title</label>
              <input type="text" id="offerTitle" name="offerTitle" placeholder="Offer Title..." class="w-full border p-2 rounded">
            </div>
            <div>
              <label class="block text-sm font-medium">Apply Offer To</label>
              <select id="offerType" name="offerType" class="w-full border p-2 rounded" onchange="toggleOfferType()">
                <option value="">-- Select Offer Type --</option>
                <option value="product">Product</option>
                <option value="category">Category</option>
              </select>
            </div>
            <div id="productSelection" class="hidden">
              <label class="block text-sm font-medium">Select Product</label>
              <select id="productId" name="productId" class="w-full border p-2 rounded">
                {{#each products}}
                  <option value="{{this._id}}">{{this.name}}</option>
                {{/each}}
              </select>
            </div>
            <div id="categorySelection" class="hidden">
              <label class="block text-sm font-medium">Select Category</label>
              <select id="categoryId" name="categoryId" class="w-full border p-2 rounded">
                {{#each categories}}
                  <option value="{{this._id}}">{{this.name}}</option>
                {{/each}}
              </select>
            </div>
            <div>
              <label class="block text-sm font-medium">Discount Value (%)</label>
              <input type="number" id="discountValue" name="discountValue" placeholder="Discount Value in Percentage..." class="w-full border p-2 rounded">
            </div>
            <div>
              <label class="block text-sm font-medium">Minimum Price (â‚¹)</label>
              <input type="number" id="minimumPrice" name="minimumPrice" placeholder="Minimum Price..." class="w-full border p-2 rounded">
            </div>
          </div>

          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium">Start Date</label>
              <input type="date" id="startDate" name="startDate" class="w-full border p-2 rounded">
            </div>
            <div>
              <label class="block text-sm font-medium">End Date</label>
              <input type="date" id="endDate" name="endDate" class="w-full border p-2 rounded">
            </div>
          </div>
        </div>

        <!-- Actions -->
        <div class="flex justify-end gap-4 mt-6">
          <button type="button" onclick="submitForm()" class="bg-green-600 hover:bg-green-500 text-white px-6 py-2 rounded">ADD OFFER</button>
          <button type="button" class="bg-red-600 hover:bg-red-500 text-white px-6 py-2 rounded" onclick="resetForm()">RESET</button>
          <button type="button" class="bg-gray-300 hover:bg-gray-200 px-6 py-2 rounded">CANCEL</button>
        </div>
      </form>
    </main>
  </div>

  <!-- Footer -->
  <footer class="bg-gray-50 text-center py-4">
    <p>2024 <span class="font-bold text-blue-600">nxtTick</span>. All rights reserved</p>
  </footer>

  <script>
  function resetForm() {
    document.getElementById("offer-form").reset();
  }

  function toggleOfferType() {
    const type = document.getElementById('offerType').value;
    document.getElementById('productSelection').classList.toggle('hidden', type !== 'product');
    document.getElementById('categorySelection').classList.toggle('hidden', type !== 'category');
  }

  async function submitForm() {
    // Get form values
    const offerTitle = document.getElementById("offerTitle").value.trim();
    const offerType = document.getElementById("offerType").value;
    const productId = document.getElementById("productId").value;
    const categoryId = document.getElementById("categoryId").value;
    const discountValue = document.getElementById("discountValue").value.trim();
    const minimumPrice = document.getElementById("minimumPrice").value.trim();
    const startDate = document.getElementById("startDate").value;
    const endDate = document.getElementById("endDate").value;

    // Validation
    if (!offerTitle) {
      Swal.fire({icon: "error", title: "Error", text: "Please enter offer title"});
      return;
    }
    if (offerType === 'product' && !productId) {
      Swal.fire({icon: "error", title: "Error", text: "Please select a product"});
      return;
    }
    if (offerType === 'category' && !categoryId) {
      Swal.fire({icon: "error", title: "Error", text: "Please select a category"});
      return;
    }
    if (!discountValue || discountValue <= 0) {
      Swal.fire({icon: "error", title: "Error", text: "Please enter valid discount value"});
      return;
    }
    if (!minimumPrice || minimumPrice <= 0) {
      Swal.fire({icon: "error", title: "Error", text: "Please enter valid minimum price"});
      return;
    }
    if (!startDate) {
      Swal.fire({icon: "error", title: "Error", text: "Please select start date"});
      return;
    }
    if (!endDate || new Date(endDate) <= new Date(startDate)) {
      Swal.fire({icon: "error", title: "Error", text: "End date must be after start date"});
      return;
    }

    // Create request body
    const requestBody = {
      offerTitle,
      offerType,
      ...(offerType === 'product' ? { productId } : { categoryId }),
      discountValue,
      minimumPrice,
      startDate,
      endDate
    };

    try {
      const response = await fetch('/admin/addOffer', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(requestBody)
      });

      const result = await response.json();

      if (result.status) {
        await Swal.fire({
          icon: 'success',
          title: 'Success',
          text: result.message
        });
        window.location.href = '/admin/allOffers';
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Something went wrong!'
        });
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong!'
      });
    }
  }
  </script>

</body>
</html>
